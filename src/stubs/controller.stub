<?php
namespace App\Http\Controllers;

use Illuminate\Support\Facades\Input;
use App\{{class}};

class {{class}}Controller extends Controller
{

    protected $excluded = ['id', 'created_at', 'deleted_at', 'updated_at'];

    public function __construct()
    {
    }

    /**
     * Display a listing of the resource.
     *
     * @return Response
     */
    public function index()
    {
        ${{plural}} = {{class}}::all();
        $cols = \Schema::getColumnListing('{{plural}}');
        $data = array('data' => ${{plural}}, 'cols' => $cols);

        return \View::make('{{class}}.index', $data);
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return Response
     */
    public function create()
    {
        $cols = \Schema::getColumnListing('{{plural}}');
        $data = array('cols' => $cols);
        return \View::make('{{class}}.create', $data);
    }

    /**
     * Store a newly created resource in storage.
     *
     * @return Response
     */
    public function store()
    {
        $input = \Input::all();
        $cols = \Schema::getColumnListing('{{plural}}');
        ${{singular}} = new {{class}}();
        foreach($cols as $col) {
            if(!in_array($col, $this->excluded)) {
                ${{singular}}->$col = $input[$col];
            }
        }
        ${{singular}}->save();

        return redirect('/{{plural}}');
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  int  $id
     * @return Response
     */
    public function edit($id)
    {
        ${{singular}} = {{class}}::findOrFail($id);
        $cols = \Schema::getColumnListing('{{plural}}');
        $data = array('{{singular}}' => ${{singular}}, 'cols' => $cols);
        return \View::make('{{class}}.edit', $data);
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  int  $id
     * @return Response
     */
    public function update($id)
    {
        $input = \Input::all();
        $cols = \Schema::getColumnListing('{{plural}}');
        ${{singular}} = {{class}}::findOrFail($id);
        foreach($cols as $col) {
            if(!in_array($col, $this->excluded)) {
                ${{singular}}->$col = $input[$col];
            }
        }
        ${{singular}}->save();

        return redirect('/{{plural}}');
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  int  $id
     * @return Response
     */
    public function destroy($id)
    {
        ${{singular}} = {{class}}::find($id);
        ${{singular}}->delete();
        return redirect('/{{plural}}');
    }

}
